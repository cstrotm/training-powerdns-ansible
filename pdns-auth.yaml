---
- name: Install DNS Jumpstart training lab authoritative server
  hosts: primaries:secondaries
  become: true
  tasks:
  - name: Upgrade the OS (apt-get dist-upgrade)
    apt:
      upgrade: dist
      update_cache: yes
  - name: Install tools
    apt: name="{{ item }}"
    loop:
      - tmux
      - tcpdump
      - emacs-nox
      - nano
      - joe
      - jove
      - mg
      - vim
      - cockpit
      - git
      - socat
      - dnsutils
      - lsof
  - name: Add User
    # Password "PowerDNS"
    user: name="user" group="sudo" password="$6$AJAGrL5nypCLboc3$XUuDmqwKmQUe5SOpiZ3jfjdpXv1NodtBWKAC8naMLOGs14b3mvyLBwVQ5TKAPImjo.Cgw//qHHVs6mK4JY9iN1"
  - name: Enable and start cockpit
    service: name="cockpit" enabled="yes" state="started"
  - name: Create directory for Cockpit socket overlay
    file:
      path: /etc/systemd/system/cockpit.socket.d/
      state: directory
  - name: Copy Cockpit socket overlay
    copy:
      src=local.conf
      dest=/etc/systemd/system/cockpit.socket.d/local.conf
  - name: Restart Cockpit
    service:
      name="cockpit.socket"
      state="restarted"
      daemon_reload=yes
  - name: Enable SSH password authentication
    lineinfile:
        path: "/etc/ssh/sshd_config"
        regexp: "^#PasswordAuthentication yes"
        line: "PasswordAuthentication yes"
    notify: kick_sshd
  - name: Enable SSH password authentication 2
    lineinfile:
        path: "/etc/ssh/sshd_config"
        regexp: "PasswordAuthentication no"
        line: "PasswordAuthentication yes"
    notify: kick_sshd
  handlers:
  - name: "kick_sshd"
    service: name="sshd" state="restarted"
- name: Install TLS Certificate
  hosts: primaries:secondaries
  become: true
  tasks:
  - name: Copy DNS/TLS key files to server
    template: src="{{ item }}" dest="/tmp" owner="root" group="root" mode="0440"
    loop:
      - dnslab.key
  - name: Install TLS certificate from dnslab.org
    get_url:
        url: "https://jpmens.org/dump/_.dnslab.org.crt"
        dest: "/tmp/dnslab.crt"
        mode: "0444"
  - name: Generate cockpit TLS cert from key/crt files
    command:
        argv:
            - /usr/sbin/remotectl
            - certificate
            - /tmp/dnslab.crt
            - /tmp/dnslab.key
        creates: /etc/cockpit/ws-certs.d/dnslab.cert
    notify: "kick_cockpit"
  - name: Change TLS cert file ownership, group and permissions
    ansible.builtin.file:
      path: /etc/cockpit/ws-certs.d/dnslab.cert
      owner: root
      group: root
      mode: '0644'
  handlers:
  - name: Restart Cockpit service
    listen: kick_cockpit
    service:
        name: "cockpit"
        state: restarted
- name: Register primary machine in DNS
  hosts: primaries
  become: true
  tasks:
  - name: Copy DNS files to server
    template: src="{{ item }}" dest="/tmp" owner="root" group="root" mode="0440"
    loop:
      - dane.key
      - nsupdate-ap.script
  - name: Create DNS entries
    command: nsupdate -k /tmp/dane.key /tmp/nsupdate-ap.script
- name: Register secondary machine in DNS
  hosts: secondaries
  become: true
  tasks:
  - name: Copy DNS files to server
    template: src="{{ item }}" dest="/tmp" owner="root" group="root" mode="0440"
    loop:
      - dane.key
      - nsupdate-as.script
  - name: Create DNS entries
    command: nsupdate -k /tmp/dane.key /tmp/nsupdate_as.script
- name: cleanup
  hosts: primaries:secondaries
  become: true
  tasks:
    - name: Clean DANE Key
      file: state="absent" path="/tmp/dane.key"
    - name: Clean nsupdate script
      file: state="absent" path="/tmp/nsupdate-ap.script"
    - name: Clean nsupdate script
      file: state="absent" path="/tmp/nsupdate-as.script"
